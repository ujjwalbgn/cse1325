QUESTION 1: Which value of slices did you select for your machine to solve the polynomial with 1 thread with at least a 30 second runtime: 
129000000

QUESTION 2: Provide the output of ``time polyb nn`` (or the improved version in the lecture video, if you prefer) for the following values of nn threads shown below:

Example Timing:

real	0m22.551s
user	0m22.524s
sys 	0m0.012s


YOUR Timing:

Without threads: 
    real	0m34.458s
    user	0m26.502s
    sys	    0m0.000s


With 2 threads:
    real	0m39.345s
    user	0m26.308s
    sys	    0m0.000s


With 4 threads:
    real	0m24.700s
    user	0m26.738s
    sys	    0m0.004s

With 6 threads:
    real	0m20.575s
    user	0m33.169s
    sys	    0m0.009s


With 8 threads: 
    real	0m16.336s
    user	0m37.149s
    sys 	0m0.046s


With 12 threads:
    real	0m14.269s
    user	0m36.679s
    sys	    0m0.073s


With 24 threads:
    real	0m19.303s
    user	0m36.898s
    sys 	0m0.057s


QUESTION 3: Does adding more threads continue to speed up the program? Do more threads ever slow down the program slightly?  Why or why not?
Yes, depends on the processor, in most cases it should increase performace till a cetrain level, after that it might be conatant or even slower. 



QUESTION 4: Does adding more threads increase the "system load", or is it constant regardless of the number of threads?  Why?
Yes, this depends on the CPU's processing power and how many other other programs are running at the same time.





